<?php
/**
 * TEST COMPLET DE TOUTES LES VUES MAMA √âCOLE
 * V√©rifie que toutes les vues fonctionnent sans erreur
 */

require_once __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

use App\Http\Controllers\MamaEcoleController;
use Illuminate\Http\Request;

echo "\n=====================================\n";
echo "   TEST TOUTES VUES MAMA √âCOLE      \n";
echo "=====================================\n\n";

$controller = new MamaEcoleController();
$results = [];

// 1. TEST DASHBOARD
echo "1Ô∏è‚É£ TEST DASHBOARD\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    // V√©rifier les tables n√©cessaires
    $tables = ['parents', 'mama_ecole_interactions'];
    foreach ($tables as $table) {
        if (!\DB::getSchemaBuilder()->hasTable($table)) {
            throw new Exception("Table '$table' manquante");
        }
    }
    
    // Appeler la m√©thode dashboard
    $response = $controller->dashboard();
    $viewData = $response->getData();
    
    if (isset($viewData['stats'])) {
        echo "‚úÖ Dashboard: OK\n";
        echo "   - Parents totaux: " . $viewData['stats']['total_parents'] . "\n";
        echo "   - Parents illettr√©s: " . $viewData['stats']['illiterate_parents'] . "\n";
        echo "   - Appels aujourd'hui: " . $viewData['stats']['calls_today'] . "\n";
        $results['dashboard'] = 'OK';
    } else {
        echo "‚ö†Ô∏è Dashboard: Donn√©es manquantes\n";
        $results['dashboard'] = 'PARTIEL';
    }
} catch (Exception $e) {
    echo "‚ùå Dashboard: ERREUR - " . $e->getMessage() . "\n";
    $results['dashboard'] = 'ERREUR';
}
echo "\n";

// 2. TEST PARENTS
echo "2Ô∏è‚É£ TEST PARENTS\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    $response = $controller->parents();
    $viewData = $response->getData();
    
    if (isset($viewData['stats']) && isset($viewData['parents'])) {
        echo "‚úÖ Parents: OK\n";
        echo "   - Total: " . $viewData['stats']['total'] . "\n";
        echo "   - Illettr√©s: " . $viewData['stats']['illiterate'] . "\n";
        $results['parents'] = 'OK';
    } else {
        echo "‚ö†Ô∏è Parents: Donn√©es manquantes\n";
        $results['parents'] = 'PARTIEL';
    }
} catch (Exception $e) {
    echo "‚ùå Parents: ERREUR - " . $e->getMessage() . "\n";
    $results['parents'] = 'ERREUR';
}
echo "\n";

// 3. TEST TEMPLATES
echo "3Ô∏è‚É£ TEST TEMPLATES\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    // Cr√©er la table si elle n'existe pas
    if (!\DB::getSchemaBuilder()->hasTable('mama_ecole_templates')) {
        \DB::statement("CREATE TABLE mama_ecole_templates (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(255),
            content TEXT,
            language VARCHAR(50),
            type VARCHAR(50),
            usage_count INT DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )");
        
        // Ajouter des templates de test
        \DB::table('mama_ecole_templates')->insert([
            ['name' => 'Notes', 'content' => 'Votre enfant a eu {note} en {matiere}', 'language' => 'french', 'type' => 'grades'],
            ['name' => 'Absence', 'content' => 'Votre enfant √©tait absent aujourd\'hui', 'language' => 'french', 'type' => 'absence'],
            ['name' => 'R√©union', 'content' => 'R√©union le {date} √† {heure}', 'language' => 'french', 'type' => 'meeting']
        ]);
    }
    
    $response = $controller->templates();
    $viewData = $response->getData();
    
    if (isset($viewData['templates'])) {
        echo "‚úÖ Templates: OK\n";
        echo "   - Nombre de templates: " . count($viewData['templates']) . "\n";
        $results['templates'] = 'OK';
    } else {
        echo "‚ö†Ô∏è Templates: Donn√©es manquantes\n";
        $results['templates'] = 'PARTIEL';
    }
} catch (Exception $e) {
    echo "‚ùå Templates: ERREUR - " . $e->getMessage() . "\n";
    $results['templates'] = 'ERREUR';
}
echo "\n";

// 4. TEST CAMPAIGNS
echo "4Ô∏è‚É£ TEST CAMPAIGNS\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    // Cr√©er la table si elle n'existe pas
    if (!\DB::getSchemaBuilder()->hasTable('mama_ecole_campaigns')) {
        \DB::statement("CREATE TABLE mama_ecole_campaigns (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(255),
            type VARCHAR(50),
            status VARCHAR(50) DEFAULT 'draft',
            target_count INT DEFAULT 0,
            sent_count INT DEFAULT 0,
            success_count INT DEFAULT 0,
            message TEXT,
            scheduled_at TIMESTAMP NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )");
        
        // Ajouter des campagnes de test
        \DB::table('mama_ecole_campaigns')->insert([
            ['name' => 'Rentr√©e scolaire', 'type' => 'sms', 'status' => 'completed', 'target_count' => 100, 'sent_count' => 100, 'message' => 'Bonne rentr√©e!'],
            ['name' => 'R√©union parents', 'type' => 'call', 'status' => 'in_progress', 'target_count' => 50, 'sent_count' => 25, 'message' => 'R√©union importante'],
            ['name' => 'Bulletin notes', 'type' => 'sms', 'status' => 'scheduled', 'target_count' => 200, 'message' => 'Bulletins disponibles']
        ]);
    }
    
    $response = $controller->campaigns();
    $viewData = $response->getData();
    
    if (isset($viewData['campaigns'])) {
        echo "‚úÖ Campaigns: OK\n";
        echo "   - Nombre de campagnes: " . $viewData['campaigns']->count() . "\n";
        $results['campaigns'] = 'OK';
    } else {
        echo "‚ö†Ô∏è Campaigns: Donn√©es manquantes\n";
        $results['campaigns'] = 'PARTIEL';
    }
} catch (Exception $e) {
    echo "‚ùå Campaigns: ERREUR - " . $e->getMessage() . "\n";
    $results['campaigns'] = 'ERREUR';
}
echo "\n";

// 5. TEST TEST-SIMPLE
echo "5Ô∏è‚É£ TEST TEST-SIMPLE\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    $response = $controller->testSimple();
    $viewData = $response->getData();
    
    if (isset($viewData['stats'])) {
        echo "‚úÖ Test-Simple: OK\n";
        echo "   - SMS aujourd'hui: " . $viewData['stats']['sms_today'] . "\n";
        $results['test-simple'] = 'OK';
    } else {
        echo "‚ö†Ô∏è Test-Simple: Donn√©es manquantes\n";
        $results['test-simple'] = 'PARTIEL';
    }
} catch (Exception $e) {
    echo "‚ùå Test-Simple: ERREUR - " . $e->getMessage() . "\n";
    $results['test-simple'] = 'ERREUR';
}
echo "\n";

// 6. TEST INDEX/MODERN
echo "6Ô∏è‚É£ TEST INDEX/MODERN\n";
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
try {
    $response = $controller->index();
    echo "‚úÖ Index/Modern: OK (page statique)\n";
    $results['index'] = 'OK';
} catch (Exception $e) {
    echo "‚ùå Index/Modern: ERREUR - " . $e->getMessage() . "\n";
    $results['index'] = 'ERREUR';
}
echo "\n";

// R√âSUM√â
echo "=====================================\n";
echo "   R√âSUM√â DES TESTS                 \n";
echo "=====================================\n\n";

$totalOK = 0;
$totalPartiel = 0;
$totalErreur = 0;

foreach ($results as $vue => $status) {
    $icon = match($status) {
        'OK' => '‚úÖ',
        'PARTIEL' => '‚ö†Ô∏è',
        'ERREUR' => '‚ùå',
        default => '‚ùì'
    };
    
    echo "$icon $vue: $status\n";
    
    if ($status == 'OK') $totalOK++;
    elseif ($status == 'PARTIEL') $totalPartiel++;
    elseif ($status == 'ERREUR') $totalErreur++;
}

echo "\nüìä STATISTIQUES:\n";
echo "   ‚úÖ Fonctionnelles: $totalOK/" . count($results) . "\n";
echo "   ‚ö†Ô∏è Partielles: $totalPartiel/" . count($results) . "\n";
echo "   ‚ùå Erreurs: $totalErreur/" . count($results) . "\n";

echo "\nüí° RECOMMANDATIONS:\n";

if ($totalErreur > 0) {
    echo "   1. Cr√©ez les tables manquantes avec les migrations\n";
    echo "   2. V√©rifiez les relations dans les mod√®les\n";
    echo "   3. Ajoutez des donn√©es de test\n";
}

if ($totalPartiel > 0) {
    echo "   1. V√©rifiez que toutes les variables sont pass√©es aux vues\n";
    echo "   2. Utilisez ?? pour les valeurs par d√©faut\n";
}

echo "\nüåê POUR TESTER DANS LE NAVIGATEUR:\n";
echo "   1. Lancez: MAMA_ECOLE_LANCER.bat\n";
echo "   2. Testez chaque URL:\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole (index)\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole/dashboard\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole/parents\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole/templates\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole/campaigns\n";
echo "      ‚Ä¢ http://localhost:8000/mama-ecole/test-simple ‚úÖ\n";

echo "\n=====================================\n";